name: Sync data to Contentful

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "apps/*/variables.json"
jobs:
  sync-to-contentful:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: get appList
        id: get_applist
        run: |
          declare -a appnames
          changefile=$(curl \
                      -H "Accept: application/vnd.github+json" \
                      -H "Authorization: Bearer ${{github.token}}" \
                      https://api.github.com/repos/Websoft9/docker-library/compare/${{github.event.before}}...${{github.event.after}})

          # Check if files field exists in the JSON object
          if echo "$changefile" | jq -e .files > /dev/null 2>&1; then
              changefile=$(echo "$changefile" | jq '.files[].filename' | sed 's/\"//g')

              for name in ${changefile}; do
                  echo ${name}
                  app=$(echo ${name} | cut -d "/" -f 2)
                  file=$(echo ${name} | cut -d "/" -f 3)
                  if [[ ${file} == "variables.json" ]]; then
                      # Check if array is empty before adding a new element
                      if [[ ${#appnames[@]} -eq 0 ]]; then
                          appnames+=${app}
                      else
                          appnames+=,${app}
                      fi
                  else
                      echo "affect nothing"
                  fi
              done
          else
              echo "No files changed"
          fi
          if [ -n "$appnames" ]; then
              appnames=${appnames:0:-1}
              echo update $appnames
          else
              echo "update all"
              appnames=$(find ./apps -mindepth 1 -maxdepth 1 -type d -exec basename {} \;)
          fi
          echo "APP_LISTS=$appnames" >> $GITHUB_OUTPUT
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests contentful_management
      
      - name: Run inline Python script to sync data to Contentful
        env:
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
          APP_LISTS: ${{ steps.get_applist.outputs.APP_LISTS }}
        run: python ./build/sync_contentful.py
