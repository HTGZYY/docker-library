# image: https://hub.docker.com/r/apache/superset
# docs: https://github.com/apache/superset

x-superset-image: &superset-image apache/superset:$W9_VERSION
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes:
  &superset-volumes # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./src/docker:/app/docker
  - superset_home:/app/superset_home

version: "3.8"
services:
  redis:
    image: redis:$W9_DB_REDIS_VERSION
    container_name: $W9_NAME-cache
    restart: unless-stopped
    ports:
      - 127.0.0.1:$W9_DB_REDIS_PORT:$W9_DB_REDIS_PORT
    volumes:
      - redis:/data

  db:
    env_file: src/docker/.env
    image: postgres:$W9_DB_POSTGRESQL_VERSION
    container_name: $W9_NAME-db
    restart: unless-stopped
    ports:
      - $W9_DB_POSTGRESQL_PORT:$W9_DB_POSTGRESQL_PORT
    environment:
      # database configurations (do not modify)
      - DATABASE_DB=$W9_DB_POSTGRESQL_NAME
      - DATABASE_HOST=$W9_DB_POSTGRESQL_HOST
      - DATABASE_PASSWORD=$W9_DB_POSTGRESQL_PASSWORD
      - DATABASE_USER=superset

      # database engine specific environment variables
      # change the below if you prefers another database engine
      - DATABASE_PORT=$W9_DB_POSTGRESQL_PORT
      - DATABASE_DIALECT=postgresql
      - POSTGRES_DB=$W9_DB_POSTGRESQL_NAME
      - POSTGRES_USER=$W9_DB_POSTGRESQL_USER
      - POSTGRES_PASSWORD=$W9_DB_POSTGRESQL_PASSWORD

      - REDIS_HOST=$W9_DB_REDIS_HOST
      - REDIS_PORT=$W9_DB_REDIS_PORT

    volumes:
      - postgresql:/var/lib/postgresql/data

  superset:
    env_file: src/docker/.env-non-dev
    image: *superset-image
    container_name: $W9_NAME-app
    restart: unless-stopped
    ports:
      - $W9_HTTP_PORT:8088
    privileged: true
    user: root
    environment:
      - COMPOSE_PROJECT_NAME=superset
      # database configurations (do not modify)
      - DATABASE_DB=$W9_DB_POSTGRESQL_NAME
      - DATABASE_HOST=$W9_DB_POSTGRESQL_HOST
      - DATABASE_PASSWORD=$W9_DB_POSTGRESQL_PASSWORD
      - DATABASE_USER=$W9_DB_POSTGRESQL_USER
      # database engine specific environment variables
      # change the below if you prefers another database engine
      - DATABASE_PORT=$W9_DB_POSTGRESQL_PORT
      - DATABASE_DIALECT=postgresql
      - POSTGRES_DB=$W9_DB_POSTGRESQL_NAME
      - POSTGRES_USER=$W9_DB_POSTGRESQL_USER
      - POSTGRES_PASSWORD=$W9_DB_POSTGRESQL_PASSWORD

      # Add the mapped in /app/pythonpath_docker which allows devs to override stuff
      - REDIS_HOST=$W9_DB_REDIS_HOST
      - REDIS_PORT=$W9_DB_REDIS_PORT
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    image: *superset-image
    container_name: $W9_NAME-init
    command: ["/app/docker/docker-init.sh"]
    env_file: src/docker/.env-non-dev
    environment:
      - COMPOSE_PROJECT_NAME=superset
      # database configurations (do not modify)
      - DATABASE_DB=$W9_DB_POSTGRESQL_NAME
      - DATABASE_HOST=$W9_DB_POSTGRESQL_HOST
      - DATABASE_PASSWORD=$W9_DB_POSTGRESQL_PASSWORD
      - DATABASE_USER=$W9_DB_POSTGRESQL_USER
      # database engine specific environment variables
      # change the below if you prefers another database engine
      - DATABASE_PORT=$W9_DB_POSTGRESQL_PORT
      - DATABASE_DIALECT=postgresql
      - POSTGRES_DB=$W9_DB_POSTGRESQL_NAME
      - POSTGRES_USER=$W9_DB_POSTGRESQL_USER
      - POSTGRES_PASSWORD=$W9_DB_POSTGRESQL_PASSWORD

      # Add the mapped in /app/pythonpath_docker which allows devs to override stuff
      - REDIS_HOST=$W9_DB_REDIS_HOST
      - REDIS_PORT=$W9_DB_REDIS_PORT
      - W9_PASSWORD=$W9_PASSWORD
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true

  superset-worker:
    image: *superset-image
    container_name: $W9_NAME-worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: src/docker/.env-non-dev
    environment:
      - COMPOSE_PROJECT_NAME=superset
      # database configurations (do not modify)
      - DATABASE_DB=$W9_DB_POSTGRESQL_NAME
      - DATABASE_HOST=$W9_DB_POSTGRESQL_HOST
      - DATABASE_PASSWORD=$W9_DB_POSTGRESQL_PASSWORD
      - DATABASE_USER=$W9_DB_POSTGRESQL_USER
      # database engine specific environment variables
      # change the below if you prefers another database engine
      - DATABASE_PORT=$W9_DB_POSTGRESQL_PORT
      - DATABASE_DIALECT=postgresql
      - POSTGRES_DB=$W9_DB_POSTGRESQL_NAME
      - POSTGRES_USER=$W9_DB_POSTGRESQL_USER
      - POSTGRES_PASSWORD=$W9_DB_POSTGRESQL_PASSWORD

      # Add the mapped in /app/pythonpath_docker which allows devs to override stuff
      - REDIS_HOST=$W9_DB_REDIS_HOST
      - REDIS_PORT=$W9_DB_REDIS_PORT
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true

  superset-worker-beat:
    image: *superset-image
    container_name: $W9_NAME-worker-beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: src/docker/.env-non-dev
    environment:
      - COMPOSE_PROJECT_NAME=superset
      # database configurations (do not modify)
      - DATABASE_DB=$W9_DB_POSTGRESQL_NAME
      - DATABASE_HOST=$W9_DB_POSTGRESQL_HOST
      - DATABASE_PASSWORD=$W9_DB_POSTGRESQL_PASSWORD
      - DATABASE_USER=$W9_DB_POSTGRESQL_USER
      # database engine specific environment variables
      # change the below if you prefers another database engine
      - DATABASE_PORT=$W9_DB_POSTGRESQL_PORT
      - DATABASE_DIALECT=postgresql
      - POSTGRES_DB=$W9_DB_POSTGRESQL_NAME
      - POSTGRES_USER=$W9_DB_POSTGRESQL_USER
      - POSTGRES_PASSWORD=$W9_DB_POSTGRESQL_PASSWORD

      # Add the mapped in /app/pythonpath_docker which allows devs to override stuff
      - REDIS_HOST=$W9_DB_REDIS_HOST
      - REDIS_PORT=$W9_DB_REDIS_PORT
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true

volumes:
  superset_home:
    external: false
  postgresql:
    external: false
  redis:
    external: false

networks:
  default:
    name: ${W9_NETWORK}
    external: true
