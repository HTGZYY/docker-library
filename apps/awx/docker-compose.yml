# AWX default user: admin password: 123456 portï¼š80
# postgres user: awx password: 123456

version: "3.8"
services:
  web:
    image: quay.io/ansible/awx:${APP_VERSION}
    container_name: ${APP_WEB_NAME}
    depends_on:
      - redis
    hostname: awxweb
    user: root
    restart: unless-stopped
    env_file: .env
    command: /usr/bin/launch_awx_web.sh
    volumes:
      - projects:/var/lib/awx/projects/
      - rsyslog-socket:/var/run/awx-rsyslog/
      - awx-receptor:/var/run/awx-receptor/
      - "./src/config/SECRET_KEY:/etc/tower/SECRET_KEY"
      - "./src/config/settings.py:/etc/tower/settings.py"
      - "./src/config/local_settings.py:/etc/tower/local_settings.py"
      - "./src/config/websocket_secret.py:/etc/tower/websocket_secret.py"
      - "./src/config/nginx.conf:/etc/nginx/nginx.conf"
      - "./src/config/credentials.py:/etc/tower/conf.d/credentials.py"
      - "./src/config/receptor/receptor-awx.conf:/etc/receptor/receptor.conf"
      - "./src/config/receptor/receptor-awx-1.conf.lock:/etc/receptor/receptor.conf.lock"
      - redis-socket:/var/run/redis/
      - "~/.kube/config:/var/lib/awx/.kube/config"
      - "/sys/fs/cgroup:/sys/fs/cgroup"
    environment:
      http_proxy:
      https_proxy:
      no_proxy:
    ports:
      - "${APP_HTTP_PORT}:8052"

  task:
    image: quay.io/ansible/awx:${APP_VERSION}
    container_name: ${APP_TASK_NAME}
    depends_on:
      - redis
      - web
      - postgres
      - task_ee
    command: sh /usr/bin/launch_awx_task.sh
    hostname: awx
    user: root
    restart: unless-stopped
    env_file: .env
    volumes:
      - projects:/var/lib/awx/projects/
      - "./src/config/launch_awx_task.sh:/usr/bin/launch_awx_task.sh"
      - rsyslog-socket:/var/run/awx-rsyslog/
      - awx-receptor:/var/run/awx-receptor/
      - "./src/config/SECRET_KEY:/etc/tower/SECRET_KEY"
      - "./src/config/settings.py:/etc/tower/settings.py"
      - "./src/config/local_settings.py:/etc/tower/local_settings.py"
      - "./src/config/websocket_secret.py:/etc/tower/websocket_secret.py"
      - "./src/config/nginx.conf:/etc/nginx/nginx.conf"
      - "./src/config/credentials.py:/etc/tower/conf.d/credentials.py"
      - "./src/config/receptor/receptor-awx.conf:/etc/receptor/receptor.conf"
      - "./src/config/receptor/receptor-awx-1.conf.lock:/etc/receptor/receptor.conf.lock"
      - redis-socket:/var/run/redis/
      - "~/.kube/config:/var/lib/awx/.kube/config"
      - "/sys/fs/cgroup:/sys/fs/cgroup"
    environment:
      http_proxy:
      https_proxy:
      no_proxy:
  task_ee:
    image: quay.io/ansible/awx-ee:${APP_VERSION}
    container_name: ${APP_TASE_EE_NAME}
    command: receptor --config /etc/receptor/receptor.conf
    hostname: awx-ee
    user: root
    restart: unless-stopped
    env_file: .env
    volumes:
      - projects:/var/lib/awx/projects/
      - rsyslog-socket:/var/run/awx-rsyslog/
      - awx-receptor:/var/run/awx-receptor/
      - "./src/config/SECRET_KEY:/etc/tower/SECRET_KEY"
      - "./src/config/settings.py:/etc/tower/settings.py"
      - "./src/config/local_settings.py:/etc/tower/local_settings.py"
      - "./src/config/websocket_secret.py:/etc/tower/websocket_secret.py"
      - "./src/config/nginx.conf:/etc/nginx/nginx.conf"
      - "./src/config/credentials.py:/etc/tower/conf.d/credentials.py"
      - "./src/config/receptor/receptor-awx.conf:/etc/receptor/receptor.conf"
      - "./src/config/receptor/receptor-awx-1.conf.lock:/etc/receptor/receptor.conf.lock"
      - redis-socket:/var/run/redis/
      - "~/.kube/config:/var/lib/awx/.kube/config"
      - "/sys/fs/cgroup:/sys/fs/cgroup"
    environment:
      http_proxy:
      https_proxy:
      no_proxy:

  redis:
    image: redis
    container_name: ${APP_REDIS_NAME}
    restart: unless-stopped
    env_file: .env
    environment:
      http_proxy:
      https_proxy:
      no_proxy:
    entrypoint: ["redis-server"]
    command: ["/usr/local/etc/redis/redis.conf"]
    volumes:
      - redis-socket:/var/run/redis/:rw
      - "./src/config/redis.conf:/usr/local/etc/redis/redis.conf"

  postgres:
    image: postgres:${APP_DB_VERSION}
    container_name: ${APP_POSTGRED_NAME}
    restart: unless-stopped
    env_file: .env
    volumes:
      - postgres_new-data:/var/lib/postgresql/data/pgdata/
    environment:
      http_proxy:
      https_proxy:
      no_proxy:

volumes:
  supervisor-socket:
  rsyslog-socket:
  redis-socket:
  postgres_new-data:
  awx-receptor:
  projects:

networks:
  default:
    name: ${APP_NETWORK}
    external: true
