# this docker-compose make from https://go2docs.graylog.org/5-2/downloading_and_installing_graylog/docker_installation.htm
# Graylog: https://hub.docker.com/r/graylog/graylog/

version: '3.8'
services:
  graylog:
    image: $W9_REPO:${W9_VERSION}
    container_name: ${W9_ID}
    env_file: .env
    entrypoint: /usr/bin/tini -- wait-for-it ${W9_ID}-elasticsearch:9200 --  /docker-entrypoint.sh
    restart: unless-stopped
    depends_on:
      - mongo
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - ${W9_HTTP_PORT_SET}:9000
      # Syslog TCP
      - ${W9_SYSLOG_TCP_PORT_SET}:1514
      # Syslog UDP
      - ${W9_SYSLOG_UDP_PORT_SET}:1514/udp
      # GELF TCP
      - ${W9_GELF_TCP_PORT_SET}:12201
      # GELF UDP
      - ${W9_GELF_UDP_PORT_SET}:12201/udp
    volumes: 
      - graylog_data:/usr/share/graylog/data/
      - graylog_plugin:/usr/share/graylog/plugin

  mongo:
    image: mongo:$W9_MONGO_VERSION
    container_name: ${W9_ID}-mongodb
    restart: unless-stopped
    volumes: 
      - mongo:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$W9_ES_VERSION
    container_name: ${W9_ID}-elasticsearch
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
    restart: unless-stopped
    volumes: 
      - elasticsearch:/usr/share/elasticsearch/data

volumes: 
  graylog_data:
  graylog_plugin:
  elasticsearch:
  mongo:
  
networks:
  default:
    name: ${W9_NETWORK}
    external: true
